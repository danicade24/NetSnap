---
- name: Respaldo avanzado de configuración de routers
  hosts: routers
  gather_facts: no
  connection: network_cli

  vars:
    backup_base_dir: "./backups"
    log_file_path: "./logs/backup.log"
    timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d_%H-%M') }}"

  tasks:

    - name: Verificar si carpeta de backup base existe
      ansible.builtin.file:
        path: "{{ backup_base_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: Crear carpeta individual por dispositivo
      ansible.builtin.file:
        path: "{{ backup_base_dir }}/{{ inventory_hostname }}"
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: Obtener configuración del dispositivo
      ios_command:
        commands:
          - show running-config
      register: config_output
      ignore_errors: true

    - name: Guardar configuración en archivo si se obtuvo correctamente
      local_action:
        module: copy
        content: "{{ config_output.stdout[0] }}"
        dest: "{{ backup_base_dir }}/{{ inventory_hostname }}/{{ timestamp }}.cfg"
      when: config_output is defined and not config_output.failed

    - name: Registrar en log: ÉXITO
      local_action:
        module: lineinfile
        path: "{{ log_file_path }}"
        create: yes
        line: "[{{ timestamp }}] Backup OK: {{ inventory_hostname }}"
      when: config_output is defined and not config_output.failed

    - name: Registrar en log: ERROR
      local_action:
        module: lineinfile
        path: "{{ log_file_path }}"
        create: yes
        line: "[{{ timestamp }}] ERROR en backup: {{ inventory_hostname }}"
      when: config_output is not defined or config_output.failed

    - name: Mostrar mensaje resumen
      debug:
        msg: >
          {% if config_output is defined and not config_output.failed %}
            Backup exitoso de {{ inventory_hostname }}
          {% else %}
            Fallo en backup de {{ inventory_hostname }}
          {% endif %}
